@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage


<div class="card text-white bg-dark">
  <div class="card-header">
    <span style="font-size: 1.2em;">Configuración</span>
    <span class="oi oi-cog" aria-hidden="true" style="margin-top: 5px; float: right"></span>
  </div>
  <div class="card-body">
    <div class="d-flex justify-content-center">
      <div class="alert alert-info col-xs-12 col-sm-10 col-md-10 col-lg-10" role="alert">
        <strong>Servidor: </strong>BigBlueButton
      </div>
    </div>
    <form @onsubmit="HandleSubmit">
      <div class="form-group row mt-3">
        <label for="inputUrl" class="col-sm-2 offset-sm-1 col-form-label">URL Server:</label>
        <div class="col-sm-8">
          <input type="text" @bind="url" class="form-control bg-dark text-white" id="inputUrl" placeholder="ingrese url server...">
        </div>
      </div>
      <div class="form-group row">
        <label for="inputClave" class="col-sm-2 offset-sm-1 col-form-label">Clave: </label>
        <div class="col-sm-8">
          <input type="text" @bind="secret" class="form-control bg-dark text-white" id="inputClave" placeholder="ingrese clave...">
        </div>
      </div>
      <div class="form-group row">
        <div class="col-sm-11 text-right">
          <button type="button" @onclick="ResetForm" class="btn btn-secondary align-content-end"><span class="oi oi-x mr-2"></span>Limpiar</button>
          <button type="submit" class="btn btn-primary align-content-end"><span class="oi oi-check mr-2"></span>Guardar</button>
        </div>
      </div>
    </form>
  </div>
</div>


@code {
  [Inject]
  protected Sotsera.Blazor.Toaster.IToaster Toaster { get; set; }

  private string url { get; set; } = "http://bbblisandro.duckdns.org/bigbluebutton/api";
  private string secret { get; set; } = "TM6I5tVVENQOLespdftbHQhF3M2SMYToOP7F4otJAc";


  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      await localStorage.SetItemAsync("url", url);
      await localStorage.SetItemAsync("secret", secret);
    }
  }

  public async Task HandleSubmit()
  {
    if (string.IsNullOrEmpty(url) || string.IsNullOrEmpty(secret))
    {
      Toaster.Warning("Complete el formulario.", "Oops!");
    }
    else
    {
      await localStorage.SetItemAsync("url", url);
      await localStorage.SetItemAsync("secret", secret);

      Toaster.Success("Datos almacenados.", "Wooh!");
    }
  }

  public void ResetForm()
  {
    this.url = "";
    this.secret = "";
  }
}